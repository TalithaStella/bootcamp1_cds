{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# =====================\n",
    "# BIBLIOTECAS NECESSÁRIAS\n",
    "# =====================\n",
    "\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import folium\n",
    "from streamlit_folium import folium_static\n",
    "\n",
    "\n",
    "st.set_page_config( layout='wide')\n",
    "\n",
    "df = pd.read_csv('ab_raw.csv' )\n",
    "\n",
    "df1 = df.copy()\n",
    "\n",
    "\n",
    "# ===================================================================\n",
    "#                         Sidebar no streamlit \n",
    "# =================================================================== \n",
    "\n",
    "\n",
    "# ===================================================================\n",
    "#                     Layout no streamlit \n",
    "# ===================================================================\n",
    "\n",
    "tab1 = st.tabs( ['Bootcamp1 - T9'] )\n",
    "\n",
    "\n",
    "with tab1: \n",
    "    \n",
    "    \n",
    "    with st.container(): \n",
    "        st.subheader ('valor médio do aluguel na cidade de Nova York')\n",
    "        \n",
    "        rent_mean = df1['price'].mean()\n",
    "        st.metric('Valor médio em NY: 'rent_mean)\n",
    "              \n",
    "\n",
    "        \n",
    "    with st.container():\n",
    "        st.subheader('valor do aluguel diário mais caro da cidade de Nova York')\n",
    "        \n",
    "        rent_max = df1['price'].max()\n",
    "        st.metric('Valor médio em NY: 'rent_max)\n",
    "        \n",
    "        \n",
    "        \n",
    "    with st.container():\n",
    "        \n",
    "        col1, col2, = st.columns(2)\n",
    "        \n",
    "        with col1:\n",
    "            \n",
    "            st.subheader('variação dos preços ( desvio padrão ) dos imóveis em NY')   \n",
    "\n",
    "            rent_std = df1['price'].max()\n",
    "            st.metric('Valor médio em NY: 'rent_std)\n",
    "            \n",
    "            \n",
    "\n",
    "        with col2:\n",
    "            st.subheader ('mapa da cidade de Nova York, localizando somente os top 10 imóveis com mais avaliações, por região')\n",
    "\n",
    "            mais_aval = df1[['number_of_reviews', 'name', 'neighbourhood_group', 'latitude', 'longitude']].sort_values('number_of_reviews', ascending=False).head(10)\n",
    "\n",
    "            # Calcular a latitude e longitude médias\n",
    "            mean_latitude = mais_aval['latitude'].mean()\n",
    "            mean_longitude = mais_aval['longitude'].mean()\n",
    "\n",
    "            # Desenhar o mapa\n",
    "            map_ = folium.Map(location=[mean_latitude, mean_longitude], zoom_start=11)\n",
    "\n",
    "            for index, location_info in mais_aval.iterrows():\n",
    "                folium.Marker([location_info['latitude'],\n",
    "                               location_info['longitude']],\n",
    "                  popup=location_info['name']).add_to(map_)\n",
    "\n",
    "            folium_static(map_ )\n",
    "\n",
    "        \n",
    "        with col2:\n",
    "            st.subheader ('gráfico de barras, mostrando a média de aluguel diária de cada região')\n",
    "\n",
    "            mean_price_data = abnb[['neighbourhood_group', 'price']].groupby('neighbourhood_group').mean().sort_values('price', ascending=False).reset_index()\n",
    "\n",
    "            fig =sns.barplot(data = mean_price_data, x = 'neighbourhood_group', y = 'price');\n",
    "            \n",
    "            st.plotly_chart( fig, use_container_width=True\n",
    "        \n",
    "        \n",
    "        \n",
    "# with tab2:         \n",
    "\n",
    "#     with st.container():\n",
    "#         st.subheader('Países que possuem mais restaurantes registrados')\n",
    "\n",
    "#         fig = p_mais_restaurante(df1)\n",
    "#         st.plotly_chart(fig, use_container_width=True)\n",
    "    \n",
    "    \n",
    "    \n",
    "#     with st.container():\n",
    "#         st.subheader ('Paises com restaurantes mais caros')\n",
    "          \n",
    "#         fig = p_rest_caros(df1)        \n",
    "#         st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "\n",
    "        \n",
    "#     with st.container():\n",
    "#         col1, col2, col3 = st.columns(3)\n",
    "        \n",
    "        \n",
    "#         with col1:\n",
    "#             st.subheader('Relação de entregas ')\n",
    "        \n",
    "#             fig = p_entrega(df1)\n",
    "#             st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "\n",
    "#         with col2:\n",
    "#             st.subheader('Relação de pedidos online ')\n",
    "\n",
    "#             fig = p_online(df1)\n",
    "#             st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "#         with col3:\n",
    "#             st.subheader('Relação de reservas ')\n",
    "\n",
    "#             fig = p_reservas(df1)\n",
    "#             st.plotly_chart(fig, use_container_width=True)\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "\n",
    "    \n",
    "\n",
    "        \n",
    "        \n",
    "    \n",
    "        \n",
    "        \n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
